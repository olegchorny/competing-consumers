apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
  name: prometheus-scaledobject
  namespace: default
  labels:
    deploymentName: publisher
spec:
  scaleTargetRef:
    deploymentName: publisher
  pollingInterval: 15  # Optional. Default: 30 seconds
  cooldownPeriod:  30 # Optional. Default: 300 seconds
  minReplicaCount: 1   # Optional. Default: 0
  maxReplicaCount: 100 # Optional. Default: 100
  triggers:
  - type: prometheus
    metadata:
      # Required
      serverAddress: http://prometheus-service.default.svc.cluster.local:9090
      metricName: access_frequency
      threshold: '100'
      query: sum(rate(http_requests[1m]))
---
apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
  name: nginx-scaledobject
  namespace: default
  labels:
    deploymentName: nginx-default-nginx-ingress-controller
spec:
  scaleTargetRef:
    deploymentName: nginx-default-nginx-ingress-controller
  pollingInterval: 15  # Optional. Default: 30 seconds
  cooldownPeriod:  30 # Optional. Default: 300 seconds
  minReplicaCount: 1   # Optional. Default: 0
  maxReplicaCount: 100 # Optional. Default: 100
  triggers:
  - type: prometheus
    metadata:
      # Required
      serverAddress: http://prometheus-service.default.svc.cluster.local:9090
      metricName: access_frequency
      threshold: '100'
      query: sum(rate(nginx_ingress_controller_nginx_process_requests_total[1m]))
---
apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
  name: consumer-scaledobject
  namespace: default
  labels:
    deploymentName: consumer
spec:
  scaleTargetRef:
    deploymentName: consumer
  pollingInterval: 15  # Optional. Default: 30 seconds
  cooldownPeriod:  30 # Optional. Default: 300 seconds
  minReplicaCount: 0   # Optional. Default: 0
  maxReplicaCount: 30 # Optional. Default: 100
  triggers:
  - type: redis
    metadata:
      address: REDIS_ADDRESS
      listName: access
      listLength: "1"
